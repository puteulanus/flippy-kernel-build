image:
  - Ubuntu2004

platform:
  - x64

environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true

cache:
  - ~/.ccache

build_script:
  - pwd
  - whoami
  - ls ~/.ccache || wget -O /tmp/ccache.cache.tar.gz https://github.com/puteulanus/flippy-kernel-build/releases/download/5.18.15_ccache/ccache.cache.tar.gz && tar zxf /tmp/ccache.cache.tar.gz -C ~/
  - sudo apt-get update
  - sudo apt-get remove -y azure-cli aspnetcore* dotnet* erlang* firefox google-chrome-stable google-cloud-sdk mongodb* mysql* nuget rabbitmq-server virtualbox wireless-regdb linux-cloud-tools-common xserver-common linux-generic-hwe-18.04 mssql-tools msodbcsql17 virtualbox-6.1
  - git clone https://github.com/armbian/build
  - cd build
  - sed -i 's#git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git#https://github.com/puteulanus/linux-5.18.y#' lib/configuration.sh
  - mkdir /tmp/{boot,modules}
  - sed -i '/Creating packages/amake ARCH=arm64 INSTALL_PATH=/tmp/boot install' lib/compilation.sh
  - sed -i '/Creating packages/amake ARCH=arm64 INSTALL_MOD_PATH=/tmp/modules modules_install' lib/compilation.sh
  - sed -i 's/LOCALVERSION="-${LINUXFAMILY}"/LOCALVERSION=""/' lib/compilation.sh
  - sed -i 's/LOCALVERSION="-$LINUXFAMILY"/LOCALVERSION=""/' lib/compilation.sh
  - sed -i "/'PRE_INSTALL_KERNEL_DEBS'/iCHOSEN_KERNEL='linux-image-current'" lib/distributions.sh
  - rm -f patch/kernel/station-p2-current/*.patch
  - mkdir userpatches
  - echo 'KERNELBRANCH="branch:main"' > userpatches/lib.config
  - wget -O userpatches/linux-media-current.config 'https://raw.githubusercontent.com/unifreq/arm64-kernel-configs/main/config-5.18.14-flippy-75%2B'
  - cat ../kernel-config.txt >> userpatches/linux-media-current.config
  - ./compile.sh  BOARD=station-p2 BRANCH=current RELEASE=bullseye BUILD_MINIMAL=yes BUILD_DESKTOP=no KERNEL_ONLY=no KERNEL_CONFIGURE=no COMPRESS_OUTPUTIMAGE=sha,gpg,img SKIP_BOOTSPLASH=yes AUFS=no EXTRAWIFI=no BUILD_KSRC=no KERNEL_KEEP_CONFIG=no
  - losetup -P /dev/loop20 output/images/*.img
  - mkdir /tmp/armbian
  - mount /dev/loop20p1 /tmp/armbian
  - cp /tmp/armbian/boot/{uInitrd-*,initrd.img-*} /tmp/boot
  - cd /tmp/boot
  - filename=$(ls uInitrd-*)
  - tar zcvf boot-${filename:8}.tar.gz *
  - cd /tmp/modules/lib/modules/
  - tar zcvf modules-${filename:8}.tar.gz *
  
artifacts:
  - path: '/tmp/boot/*.tar.gz'
    name: boot
  
  - path: '/tmp/modules/*.tar.gz'
    name: modules
